/*
 * Keep my container the same size when I add a border or padding.
 * Push my content inwards, as opposed to expanding my container outwards.
 */
html {
  box-sizing: border-box;
}
body{
  width:100%;
  box-sizing: border-box;;
  margin:0;
}

*, *:before, *:after {
  box-sizing: inherit;
}

/*
 * A container holds all elements and controls the pageâ€™s maximum width.
 * Using a container will make designing for responsive easier!
 */
.container {
  max-width: 1140px; /* Main width of your website! Change at your leisure, or use the .container-fluid class instead. */
  padding: 1em 2em;
  margin-right: auto;
  margin-left: auto;
  overflow: auto;
}
.container-fluid {
  max-width: none;
}



/*
 * Use float to line up our grid elements next to each other.
 * By default (i.e. mobile devices), make all columns 100% wide with some padding and margin.
 */
.column {
  float: left;
  padding: 1em;
  margin-bottom: 1em;
  width: 100%;
}

/*
 * Enable grid without padding between each column by adding '.no-padding' to a '.container' element.
 */
.no-padding .column {
  padding: 0;
}

/*
 * Enable grid without margin below each column by adding '.no-margin' to a '.container' element.
 */
.no-margin .column {
  margin-bottom: 0;
}


@media only screen and (min-width: 1060px)  {

.container {
  max-width: 1140px; /* Main width of your website! Change at your leisure, or use the .container-fluid class instead. */
  padding: 1em 2em;
  margin-right: auto;
  margin-left: auto;
  overflow: auto;
}

.container-fluid {
  max-width: none;
}

.column {
  float: left;
  padding: 1em;
  margin-bottom: 1em;
  width: 100%;
}

.no-padding .column {
  padding: 0;
}

.no-margin .column {
  margin-bottom: 0;
}

.column.three-fourths { width: 75%; }
.column.two-thirds    { width: 66.666%; }
.column.one-half      { width: 50%; }
.column.one-third     { width: 33.333%; }
.column.one-fourth    { width: 25%; }
.column.one-sixth     { width: 16.666%; }



}

/*
 * We wrap our columns inside rows to prevent other elements from stacking next to them, i.e. clearing issues.
 * We fix these by applying a version of the popular "clearfix" (http://cssmojo.com/the-very-latest-clearfix-reloaded/)
 * to our row class, which will contain floated column elements.
 */
.row {
  margin-right: -1em;
  margin-left: -1em;
}
.row:after {
  content: " ";
  display: block;
  clear: both;
}
